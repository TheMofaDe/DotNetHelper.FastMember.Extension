### YamlMime:ManagedReference
items:
- uid: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper
  commentId: T:DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper
  id: ExpressionHelper
  parent: DotNetHelper.FastMember.Extension.Helpers
  children:
  - DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  langs:
  - csharp
  - vb
  name: ExpressionHelper
  nameWithType: ExpressionHelper
  fullName: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper
  type: Class
  source:
    remote:
      path: src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNet-Starter-Template
    id: ExpressionHelper
    path: ../src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
    startLine: 7
  assemblies:
  - DotNetHelper.FastMember.Extension
  namespace: DotNetHelper.FastMember.Extension.Helpers
  syntax:
    content: public static class ExpressionHelper
    content.vb: Public Module ExpressionHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: GetPropertyNamesFromExpressions``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper
  langs:
  - csharp
  - vb
  name: GetPropertyNamesFromExpressions<T>(Expression<Func<T, Object>>[])
  nameWithType: ExpressionHelper.GetPropertyNamesFromExpressions<T>(Expression<Func<T, Object>>[])
  fullName: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions<T>(System.Linq.Expressions.Expression<System.Func<T, System.Object>>[])
  type: Method
  source:
    remote:
      path: src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNet-Starter-Template
    id: GetPropertyNamesFromExpressions
    path: ../src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
    startLine: 10
  assemblies:
  - DotNetHelper.FastMember.Extension
  namespace: DotNetHelper.FastMember.Extension.Helpers
  syntax:
    content: public static List<string> GetPropertyNamesFromExpressions<T>(this Expression<Func<T, object>>[] expression)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[]
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPropertyNamesFromExpressions(Of T)(expression As Expression(Of Func(Of T, Object))()) As List(Of String)
  overload: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions*
  nameWithType.vb: ExpressionHelper.GetPropertyNamesFromExpressions(Of T)(Expression(Of Func(Of T, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))())
  name.vb: GetPropertyNamesFromExpressions(Of T)(Expression(Of Func(Of T, Object))())
- uid: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: GetPropertyNamesFromExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  isExtensionMethod: true
  parent: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper
  langs:
  - csharp
  - vb
  name: GetPropertyNamesFromExpression<T>(Expression<Func<T, Object>>)
  nameWithType: ExpressionHelper.GetPropertyNamesFromExpression<T>(Expression<Func<T, Object>>)
  fullName: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression<T>(System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNet-Starter-Template
    id: GetPropertyNamesFromExpression
    path: ../src/DotNetHelper.FastMember.Extension/Helpers/ExpressionHelper.cs
    startLine: 22
  assemblies:
  - DotNetHelper.FastMember.Extension
  namespace: DotNetHelper.FastMember.Extension.Helpers
  syntax:
    content: public static List<string> GetPropertyNamesFromExpression<T>(this Expression<Func<T, object>> expression)
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPropertyNamesFromExpression(Of T)(expression As Expression(Of Func(Of T, Object))) As List(Of String)
  overload: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression*
  nameWithType.vb: ExpressionHelper.GetPropertyNamesFromExpression(Of T)(Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: GetPropertyNamesFromExpression(Of T)(Expression(Of Func(Of T, Object)))
references:
- uid: DotNetHelper.FastMember.Extension.Helpers
  commentId: N:DotNetHelper.FastMember.Extension.Helpers
  name: DotNetHelper.FastMember.Extension.Helpers
  nameWithType: DotNetHelper.FastMember.Extension.Helpers
  fullName: DotNetHelper.FastMember.Extension.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions*
  commentId: Overload:DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions
  name: GetPropertyNamesFromExpressions
  nameWithType: ExpressionHelper.GetPropertyNamesFromExpressions
  fullName: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpressions
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}[]
  isExternal: true
  name: Expression<Func<T, Object>>[]
  nameWithType: Expression<Func<T, Object>>[]
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Object>>[]
  nameWithType.vb: Expression(Of Func(Of T, Object))()
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))()
  name.vb: Expression(Of Func(Of T, Object))()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression*
  commentId: Overload:DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression
  name: GetPropertyNamesFromExpression
  nameWithType: ExpressionHelper.GetPropertyNamesFromExpression
  fullName: DotNetHelper.FastMember.Extension.Helpers.ExpressionHelper.GetPropertyNamesFromExpression
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<T, Object>>
  nameWithType: Expression<Func<T, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Object>>
  nameWithType.vb: Expression(Of Func(Of T, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))
  name.vb: Expression(Of Func(Of T, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
